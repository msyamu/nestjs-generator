openapi: '3.0.3'
info:
  title: Example API
  version: 1.0.0
tags:
  - name: auth
    description: Operations about authentication
  - name: user
    description: Operations about users
paths:
  /auths/login:
    post:
      operationId: login
      tags:
        - auth
      x-auth-required: false
      x-internal-params:
        - Req
        - Res
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "204":
          description: A successful login
  /users:
    get:
      operationId: listUsers
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/sort"
      responses:
        "200":
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
              examples:
                Jessica:
                  value:
                    - id: 10
                      name: Jessica Smith
                    - id: 11
                      name: Ron Stewart
                Ron:
                  value:
                    - id: 20
                      name: Ron Stewart
                    - id: 21
                      name: Ron Stewart
    post:
      operationId: createUser
      tags:
        - user
      x-internal-params:
        - UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            examples:
              Jessica:
                value:
                  id: 10
                  name: Jessica Smith
              Ron: # Example 2
                value:
                  id: 11
                  name: Ron Stewart
      responses:
        "201":
          description: A user object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                Jessica:
                  value:
                    id: 10
                    name: Jessica Smith
                Ron:
                  value:
                    id: 20
                    name: Ron Stewart
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: New order
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserId:
      type: string
      pattern: '[1-9][0-9]*'
      example: 1
  parameters:
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      required: true
      schema:
        type: integer
        format: int32
    page:
      name: page
      in: query
      description: Page number
      required: true
      schema:
        type: integer
        format: int32
    sort:
      name: sort
      in: query
      description: Sort order
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
